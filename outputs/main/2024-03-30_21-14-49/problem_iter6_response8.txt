```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    
    # Calculate average and standard deviation using vectorized operations
    distances_to_unvisited = distance_matrix[np.ix_(unvisited_nodes, unvisited_nodes)]
    average_distance_to_unvisited = np.mean(distances_to_unvisited, axis=1)
    std_dev_distance_to_unvisited = np.std(distances_to_unvisited, axis=1)
    
    # Calculate scores using vectorized operations
    scores = c1 * distance_matrix[current_node, list(unvisited_nodes)] \
           - c2 * average_distance_to_unvisited \
           + c3 * std_dev_distance_to_unvisited \
           - c4 * distance_matrix[destination_node, list(unvisited_nodes)]
    
    next_node = unvisited_nodes[np.argmin(scores)]
    return next_node
```
