```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    
    current_node_distances = distance_matrix[current_node]
    destination_node_distances = distance_matrix[destination_node]
    
    for node in unvisited_nodes:
        distance_to_node = current_node_distances[node]
        distances_from_node = current_node_distances[list(unvisited_nodes-{node})]
        average_distance_to_unvisited = np.mean(distances_from_node)
        std_dev_distance_to_unvisited = np.std(distances_from_node)
        score = c1 * distance_to_node - c2 * average_distance_to_unvisited + c3 * std_dev_distance_to_unvisited - c4 * destination_node_distances[node]
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
