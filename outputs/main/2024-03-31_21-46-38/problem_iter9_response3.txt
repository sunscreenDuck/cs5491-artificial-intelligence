```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    unvisited_distances = distance_matrix[list(unvisited_nodes)][:, list(unvisited_nodes)]
    average_distances = np.mean(unvisited_distances, axis=1)
    std_dev_distances = np.std(unvisited_distances, axis=1)
    for node in unvisited_nodes:
        score = c1 * distance_matrix[current_node][node] - c2 * average_distances[node] + c3 * std_dev_distances[node] - c4 * distance_matrix[destination_node][node]
        scores[node] = score
    next_node = min(scores, key=scores.get)
    return next_node
```
