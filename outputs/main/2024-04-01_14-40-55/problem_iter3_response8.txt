```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    future_distances = distance_matrix[:, list(unvisited_nodes)].mean(axis=1)
    for node in unvisited_nodes:
        all_distances = distance_matrix[node, list(unvisited_nodes.difference({node}))]
        average_distance_to_unvisited = np.mean(all_distances)
        std_dev_distance_to_unvisited = np.std(all_distances)
        look_ahead_distance = c2 * future_distances[node]
        score = c1 * distance_matrix[current_node, node] + look_ahead_distance - c3 * average_distance_to_unvisited +c4 * std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node, node]
        scores[node] = score
    next_node = min(scores, key=scores.get)
    return next_node
```
