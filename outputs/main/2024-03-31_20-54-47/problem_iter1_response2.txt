```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    
    for node in unvisited_nodes:
        all_distances = [distance_matrix[node][i] for i in unvisited_nodes if i != node]
        average_distance_to_unvisited = np.mean(all_distances)
        std_dev_distance_to_unvisited = np.std(all_distances)
        
        # Calculate the lookahead score
        lookahead_score = 0.0
        for lookahead_node in unvisited_nodes:
            if lookahead_node != node:
                lookahead_to_unvisited = [distance_matrix[lookahead_node][i] for i in unvisited_nodes if i != lookahead_node]
                lookahead_average_distance_to_unvisited = np.mean(lookahead_to_unvisited)
                lookahead_std_dev_distance_to_unvisited = np.std(lookahead_to_unvisited)
                lookahead_score += c1 * distance_matrix[node][lookahead_node] - c2 * lookahead_average_distance_to_unvisited + c3 * lookahead_std_dev_distance_to_unvisited

        score = c1 * distance_matrix[current_node][node] - c2 * average_distance_to_unvisited + c3 * std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node][node] + threshold * lookahead_score
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```

In the improved version `select_next_node_v2`, I added a lookahead mechanism to consider the future impact of selecting each node on the remaining unvisited nodes. The lookahead score is calculated by considering the average and standard deviation of distances between each potential next node and the remaining unvisited nodes. This lookahead score is added to the existing score calculated in `select_next_node_v1`. The threshold parameter controls the relative importance of the lookahead score, where a higher value places more weight on the lookahead mechanism.
