```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the inverse distance matrix
    inverse_distances = 1 / distance_matrix
    
    # Calculate the max and min values of the inverse distances
    max_inverse_distance = np.max(inverse_distances)
    min_inverse_distance = np.min(inverse_distances)
    
    # Calculate the normalized inverse distances
    normalized_inverse_distances = (inverse_distances - min_inverse_distance) / (max_inverse_distance - min_inverse_distance)
    
    # Calculate the edge probabilities based on the normalized inverse distances
    edge_probabilities = normalized_inverse_distances ** 2
    
    # Set unpromising elements to zero
    edge_probabilities[edge_probabilities < 0.1] = 0
    
    return edge_probabilities
```

