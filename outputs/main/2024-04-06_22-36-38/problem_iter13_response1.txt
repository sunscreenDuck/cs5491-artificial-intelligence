```python
from typing import List
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    
    # Normalize the distance matrix
    normalized_matrix = distance_matrix / np.max(distance_matrix)
    
    # Calculate the reciprocal of the normalized matrix
    reciprocal_matrix = 1 / normalized_matrix
    
    # Calculate the mean and standard deviation of the reciprocal matrix
    mean = np.mean(reciprocal_matrix)
    std_dev = np.std(reciprocal_matrix)
    
    # Calculate the normalized reciprocal matrix by subtracting the mean and dividing by the standard deviation
    normalized_reciprocal_matrix = (reciprocal_matrix - mean) / std_dev
    
    # Apply sparsification by setting unpromising elements to zero
    threshold = np.mean(normalized_reciprocal_matrix) - np.std(normalized_reciprocal_matrix)
    sparsified_matrix = normalized_reciprocal_matrix.copy()
    sparsified_matrix[sparsified_matrix < threshold] = 0
    
    return sparsified_matrix
```
