```python

import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Normalize the distance matrix
    min_dist = np.min(distance_matrix)
    max_dist = np.max(distance_matrix)
    normalized_matrix = (distance_matrix - min_dist) / (max_dist - min_dist)

    # Set the diagonal elements to infinity to prevent self-loops
    np.fill_diagonal(normalized_matrix, np.inf)

    # Calculate the row and column minimums
    row_min = np.min(normalized_matrix, axis=1)
    col_min = np.min(normalized_matrix, axis=0)

    # Subtract the row and column minimums from the distance matrix
    heuristics = normalized_matrix - row_min[:, np.newaxis] - col_min

    # Return the modified distance matrix
    return heuristics

```
