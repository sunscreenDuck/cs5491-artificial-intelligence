```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # It's bad to include long edges in the solution
    max_distance = np.max(distance_matrix)
    return distance_matrix / max_distance
```
The `heuristics_v2` function improves upon `heuristics_v1` by normalizing the distance matrix. It calculates the maximum distance in the matrix and divides all distances by this maximum value. This ensures that the indicators returned have values between 0 and 1, with 1 indicating the longest edge in the matrix. Normalization helps in prioritizing shorter edges during the search process.
