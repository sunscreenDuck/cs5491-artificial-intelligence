```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes with look-ahead mechanisms."""
    threshold = 0.7
    c1, c2, c3, c4, c5 = 0.4, 0.3, 0.2, 0.1, 0.5
    scores = {}
    
    for node in unvisited_nodes:
        all_distances = [distance_matrix[node][i] for i in unvisited_nodes if i != node]
        average_distance_to_unvisited = np.mean(all_distances)
        std_dev_distance_to_unvisited = np.std(all_distances)

        lookahead_scores = []
        for next_node in unvisited_nodes:
            if next_node != node:
                lookahead_distances = [distance_matrix[next_node][i] for i in unvisited_nodes if i != next_node]
                lookahead_average_distance_to_unvisited = np.mean(lookahead_distances)
                lookahead_std_dev_distance_to_unvisited = np.std(lookahead_distances)
                lookahead_score = c2 * distance_matrix[current_node][next_node] - c3 * lookahead_average_distance_to_unvisited + c4 * lookahead_std_dev_distance_to_unvisited - c5 * distance_matrix[destination_node][next_node]
                lookahead_scores.append(lookahead_score)

        score = c1 * distance_matrix[current_node][node] - c2 * average_distance_to_unvisited + c3 * std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node][node] + threshold * max(lookahead_scores)
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
In `select_next_node_v2`, I have added a look-ahead mechanism using a nested loop. For each unvisited node, the function evaluates a set of lookahead scores by considering the potential next nodes. The lookahead scores are calculated based on the distance between the current node and each potential next node, along with the average distance and standard deviation of distances to unvisited nodes from each potential next node. The maximum lookahead score is then added to the original score calculation.
