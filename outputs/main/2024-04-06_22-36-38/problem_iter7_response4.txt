```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Normalize the distance matrix
    normalized_matrix = distance_matrix / np.max(distance_matrix)

    # Calculate the mean and standard deviation of the normalized matrix
    mean = np.mean(normalized_matrix)
    std_dev = np.std(normalized_matrix)

    # Normalize the matrix by subtracting the mean and dividing by the standard deviation
    normalized_matrix = (normalized_matrix - mean) / std_dev

    # Apply sparsification by setting unpromising elements to zero
    threshold = np.mean(normalized_matrix) - np.std(normalized_matrix)
    sparsified_matrix = normalized_matrix.copy()
    sparsified_matrix[sparsified_matrix < threshold] = 0

    return sparsified_matrix
```
