```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]
    
    # Calculate the average distance for each node
    node_avg_distance = np.sum(distance_matrix, axis=1) / (num_nodes - 1)
    
    # Compute the penalty matrix using vectorized operations
    penalty_matrix = distance_matrix / (node_avg_distance[:, np.newaxis] + node_avg_distance)
    
    return penalty_matrix
```
