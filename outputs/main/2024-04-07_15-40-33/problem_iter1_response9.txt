```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    indicators = np.zeros_like(distance_matrix)
    
    for i in range(n):
        for j in range(n):
            if i != j:
                # Add a penalty to long edges
                indicators[i, j] = distance_matrix[i, j] / np.mean(distance_matrix)
    
    return indicators
```
In `heuristics_v2`, the indicator values are calculated by dividing each distance by the mean distance in the distance matrix. This penalizes longer edges more compared to `heuristics_v1`.
