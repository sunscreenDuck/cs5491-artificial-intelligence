```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Normalize the distance matrix
    normalized_matrix = distance_matrix / np.max(distance_matrix)

    # Calculate the inverse of the normalized matrix
    inverse_matrix = 1 / normalized_matrix

    # Calculate the reflection matrix by summing the normalized and inverse matrix
    reflection_matrix = normalized_matrix + inverse_matrix

    # Calculate the mean of the reflection matrix
    mean_value = np.mean(reflection_matrix)

    # Sparsify the matrix by setting elements below the mean to zero
    sparsified_matrix = np.where(reflection_matrix < mean_value, 0, reflection_matrix)

    return sparsified_matrix
```

