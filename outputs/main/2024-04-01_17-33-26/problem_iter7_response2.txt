```python
def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    num_nodes = distance_matrix.shape[0]

    # Calculate the sum of distances for each node
    node_distances = np.sum(distance_matrix, axis=1)

    # Calculate the average distance for each node
    node_avg_distance = node_distances / (num_nodes - 1)

    # Calculate the normalized distance matrix
    norm_distance_matrix = distance_matrix / (node_avg_distance.reshape(-1, 1) +
                                              node_avg_distance.reshape(1, -1))

    # Calculate the penalty matrix
    penalty_matrix = norm_distance_matrix

    return penalty_matrix
```
