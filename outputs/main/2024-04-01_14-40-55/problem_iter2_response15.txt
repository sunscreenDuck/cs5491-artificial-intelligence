```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes with look-ahead mechanism."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    for node in unvisited_nodes:
        all_distances = distance_matrix[node, [i for i in unvisited_nodes if i != node]]
        average_distance_to_unvisited = np.mean(all_distances)
        std_dev_distance_to_unvisited = np.std(all_distances)
        
        next_all_distances = distance_matrix[current_node, [i for i in unvisited_nodes if i != node]]
        next_average_distance_to_unvisited = np.mean(next_all_distances)
        next_std_dev_distance_to_unvisited = np.std(next_all_distances)
        
        next_scores = c1 * next_all_distances - c2 * next_average_distance_to_unvisited + c3 * next_std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node, [i for i in unvisited_nodes if i != node]]
        lookahead_score = np.mean(next_scores)
        
        score = c1 * distance_matrix[current_node, node] - c2 * average_distance_to_unvisited + c3 * std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node, node] + threshold * lookahead_score
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
In this version, the unnecessary loop in calculating the look-ahead scores has been removed. Additionally, the repeated distance calculations have been reduced by using indexing directly on the distance_matrix.
