```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    weights = np.array([0.35, 0.25, 0.25, 0.15])
    weights = weights / np.sum(weights)
    
    scores = {}
    for node in unvisited_nodes:
        distances_to_unvisited = distance_matrix[node, list(unvisited_nodes - {node})]
        average_distance_to_unvisited = np.mean(distances_to_unvisited)
        std_dev_distance_to_unvisited = np.std(distances_to_unvisited)
        
        score = np.dot(weights, [
            -distance_matrix[current_node, node],
            average_distance_to_unvisited,
            -std_dev_distance_to_unvisited,
            distance_matrix[destination_node, node]
        ])
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
