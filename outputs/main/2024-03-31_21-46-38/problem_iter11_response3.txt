```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.7
    weights = np.array([0.4, 0.3, 0.2, 0.1])

    scores = {}
    for node in unvisited_nodes:
        distances = distance_matrix[node, list(unvisited_nodes - {node})]
        average_distance_to_unvisited = np.mean(distances)
        std_dev_distance_to_unvisited = np.std(distances)

        score = np.dot(
            [distance_matrix[current_node][node], -average_distance_to_unvisited, std_dev_distance_to_unvisited, -distance_matrix[destination_node][node]],
            weights.astype(float)
        )
        scores[node] = score

    next_node = min(scores, key=scores.get)
    return next_node
```
In this version of the code, we have made several improvements. Here are some of the changes:
- We have used numpy array operations to calculate the average_distance_to_unvisited and std_dev_distance_to_unvisited with better performance.
- We have used set operations to remove unnecessary calculations.
- We have updated the code to use a numpy dot product to calculate the score, making the code more efficient and concise.
- We have used the `.astype(float)` method to ensure the weights array is of the float data type for the dot product calculation.
- We have used more meaningful variable names to improve code clarity.
