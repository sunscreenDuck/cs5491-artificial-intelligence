```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the inverse of the distance matrix
    inv_distance_matrix = np.divide(1, distance_matrix, out=np.zeros_like(distance_matrix), where=distance_matrix!=0)
    
    # Create a weight matrix based on various factors
    weight_matrix = np.multiply(inv_distance_matrix, np.log(distance_matrix + 1))
    
    # Set unpromising elements to zero
    weight_matrix[weight_matrix < np.mean(weight_matrix)] = 0
    
    return weight_matrix
```
