```python
import numpy as np

def heuristics_v2(distance_matrix):
    combined_factors = 1 / distance_matrix + 1 / distance_matrix.T
    sparsified_matrix = np.where(combined_factors > np.mean(combined_factors), combined_factors, 0)
    return sparsified_matrix
```
In `heuristics_v2`, we combine the factors by taking the reciprocal of the distance matrix and its transpose, and then summing them. This gives us an indication of the overall desirability of each edge. 
To sparsify the matrix, we compare each element of the combined factors matrix with the mean of the matrix. If an element is greater than the mean, we keep it; otherwise, we set it to zero.
The resulting sparsified matrix indicates which edges are more promising to include in the solution.
