```python
def heuristics_v2(distance_matrix):
    num_nodes = distance_matrix.shape[0]
    
    # Calculate the average distance for each node
    node_avg_distance = np.sum(distance_matrix, axis=1) / (num_nodes - 1)
    
    # Initialize the penalty matrix with zeros
    penalty_matrix = np.zeros_like(distance_matrix)
    
    # Compute the penalty values using vectorized operations
    penalty_matrix = distance_matrix - node_avg_distance[:, np.newaxis]
    
    return penalty_matrix
```
