```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the edge heuristics array
    edge_heuristics = np.zeros_like(distance_matrix)

    # Calculate the shortest edge for each node
    shortest_edges = np.min(distance_matrix, axis=1)

    # Calculate the heuristics for each edge
    for i in range(distance_matrix.shape[0]):
        for j in range(distance_matrix.shape[1]):
            if distance_matrix[i, j] == shortest_edges[i]:
                edge_heuristics[i, j] = shortest_edges[i]
            else:
                edge_heuristics[i, j] = distance_matrix[i, j] - shortest_edges[i]

    return edge_heuristics
```
