```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    weight_current = 0.4
    weight_average = 0.3
    weight_std_dev = 0.3
    
    scores = {}
    
    for node in unvisited_nodes:
        distances_to_unvisited = distance_matrix[node, list(unvisited_nodes - {node})]
        average_distance_to_unvisited = np.mean(distances_to_unvisited)
        std_dev_distance_to_unvisited = np.std(distances_to_unvisited)
        
        score = weight_current * distance_matrix[current_node, node] - weight_average * average_distance_to_unvisited - weight_std_dev * std_dev_distance_to_unvisited
        
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
