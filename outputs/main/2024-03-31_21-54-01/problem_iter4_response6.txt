```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.6
    c1, c2 = 0.5, 0.5
    scores = {}
    
    for node in unvisited_nodes:
        distance_to_node = distance_matrix[current_node][node]
        distance_from_node = distance_matrix[node][destination_node]
        
        score = c1 * distance_to_node - c2 * distance_from_node
        
        # Calculate the lookahead score
        lookahead_score = 0
        for next_node in unvisited_nodes:  
            if next_node != node:
                lookahead_distance = distance_matrix[node][next_node]
                lookahead_score += c1 * lookahead_distance - c2 * distance_matrix[next_node][destination_node]
        
        # Calculate the final score by adding the lookahead score to the base score multiplied by the threshold
        final_score = score + threshold * lookahead_score
        scores[node] = final_score
    
    # Select the next node with the highest score
    next_node = max(scores, key=scores.get)
    
    return next_node
```
