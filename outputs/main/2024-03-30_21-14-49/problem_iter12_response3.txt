```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    c1, c2, c3, c4 = 1, 1, 1, 1
    scores = {}
    for node in unvisited_nodes:
        # Calculate distance to current node
        distance_to_current = distance_matrix[current_node][node]
        
        # Calculate distance to destination node
        distance_to_destination = distance_matrix[destination_node][node]
        
        # Weighted sum of objective functions
        score = c1 * distance_to_current \
                - c2 * distance_to_destination \
                + c3 * len(unvisited_nodes) \
                + c4 * np.random.uniform(low=0, high=0.1)
                
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
