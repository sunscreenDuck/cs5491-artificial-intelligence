```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the maximum distance in the distance matrix
    max_distance = np.max(distance_matrix)
    
    # Normalize the distance matrix by dividing each element by the maximum distance
    normalized_matrix = distance_matrix / max_distance
    
    # Invert the values of the normalized matrix to prioritize shorter distances
    inverted_matrix = 1 / normalized_matrix
    
    # Set the diagonal elements of the inverted matrix to 0 to prevent self-loops
    np.fill_diagonal(inverted_matrix, 0)
    
    # Return the inverted matrix as the heuristics
    return inverted_matrix
```
