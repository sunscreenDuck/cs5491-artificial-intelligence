```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    weights = [0.5, 0.25, 0.15, 0.1]
    scores = {}
    
    for node in unvisited_nodes:
        node_distances = distance_matrix[node]
        all_distances = node_distances[list(unvisited_nodes - {node})]
        average_distance_to_unvisited = np.mean(all_distances)
        std_dev_distance_to_unvisited = np.std(all_distances)
        
        score = sum(w * x for w, x in zip(weights, [
            node_distances[current_node], 
            average_distance_to_unvisited, 
            std_dev_distance_to_unvisited, 
            node_distances[destination_node]
        ]))
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
```
