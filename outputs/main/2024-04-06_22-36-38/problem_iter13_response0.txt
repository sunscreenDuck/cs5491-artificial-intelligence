```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the mean and standard deviation of the distance matrix
    mean = np.mean(distance_matrix)
    std_dev = np.std(distance_matrix)
    
    # Determine the sparsification threshold based on statistical measures
    threshold = mean - std_dev
    
    # Obtain the prior indicators by setting unpromising elements to zero
    prior_indicators = np.where(distance_matrix < threshold, 0, 1)
    
    return prior_indicators
```
In this improved version, we directly calculate the mean and standard deviation of the distance matrix without normalizing it. Then, the sparsification threshold is determined by subtracting the standard deviation from the mean. The prior indicators are obtained by setting the elements of the distance matrix that are below the threshold to zero, indicating their unpromising nature.
