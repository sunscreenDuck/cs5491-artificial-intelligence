```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Normalize the distance matrix
    normalized_matrix = distance_matrix / np.max(distance_matrix)

    # Calculate the inverse of the normalized matrix
    inverse_matrix = 1 / normalized_matrix

    # Calculate the mean and standard deviation of the inverse matrix
    mean = np.mean(inverse_matrix)
    std_dev = np.std(inverse_matrix)

    # Apply sparsification directly on the inverse_matrix using meaningful thresholds
    threshold = mean - 1.5 * std_dev
    inverse_matrix[inverse_matrix < threshold] = 0

    return inverse_matrix
```
