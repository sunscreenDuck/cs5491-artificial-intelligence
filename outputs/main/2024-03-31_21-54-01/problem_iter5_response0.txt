```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    for node in unvisited_nodes:
        distances = distance_matrix[node, list(unvisited_nodes - {node})]
        average_distance_to_unvisited = np.mean(distances)
        std_dev_distance_to_unvisited = np.std(distances)
        score = c1 * distance_matrix[current_node][node] - c2 * average_distance_to_unvisited + c3 * std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node][node]
        scores[node] = score
    next_node = min(scores, key=scores.get)
    return next_node
```
In this improved version of the `select_next_node` function, the calculation of `average_distance_to_unvisited` and `std_dev_distance_to_unvisited` has been simplified by using NumPy's array indexing. Additionally, the set difference operation `unvisited_nodes - {node}` is used instead of a loop to exclude the current node from the distances calculation.
