```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    weights = {'dist_to_current': 0.4, 'avg_dist_to_unvisited': 0.3, 'std_dev_dist_to_unvisited': 0.2, 'dist_to_destination': 0.1}
    
    scores = {}
    for node in unvisited_nodes:
        distances = [distance_matrix[node][i] for i in unvisited_nodes if i != node]
        avg_distance_to_unvisited = np.mean(distances)
        std_dev_distance_to_unvisited = np.std(distances)
        
        score = (weights['dist_to_current'] * distance_matrix[current_node][node] -
                 weights['avg_dist_to_unvisited'] * avg_distance_to_unvisited +
                 weights['std_dev_dist_to_unvisited'] * std_dev_distance_to_unvisited -
                 weights['dist_to_destination'] * distance_matrix[destination_node][node])
        
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
In `select_next_node_v2`, the variable `average_distance_to_unvisited` has been renamed to `avg_distance_to_unvisited` for improved readability. The calculation of the `score` has been simplified by combining the addition and subtraction operations into a single line.
