```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    
    for node in unvisited_nodes:
        node_distances = distance_matrix[node, list(unvisited_nodes - {node})]  # Vectorized operation to get distances
        average_distance_to_unvisited = np.mean(node_distances)
        std_dev_distance_to_unvisited = np.std(node_distances)
        
        score = c1 * distance_matrix[current_node][node] - c2 * average_distance_to_unvisited + c3 * std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node][node]
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
Improvements in select_next_node_v2:
1. Removed the threshold variable as it was unused.
2. Simplified the normalization process by using vectorized operations and removing unnecessary calculations.
3. Updated variable names for better readability.
4. Removed unnecessary random noise and calculation for determinism and simplicity.
5. Enclosed the code in a Python code block for better formatting.
