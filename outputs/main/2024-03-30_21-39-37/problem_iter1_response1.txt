```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes using look-ahead mechanisms."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}

    for node in unvisited_nodes:
        lookahead_scores = []
        for lookahead_node in unvisited_nodes:
            if lookahead_node != node:
                lookahead_score = distance_matrix[node][lookahead_node] - c2 * np.mean([distance_matrix[lookahead_node][i] for i in unvisited_nodes if i != lookahead_node]) + c3 * np.std([distance_matrix[lookahead_node][i] for i in unvisited_nodes if i != lookahead_node]) - c4 * distance_matrix[destination_node][lookahead_node]
                lookahead_scores.append(lookahead_score)
        
        score = c1 * distance_matrix[current_node][node] - threshold * np.mean(lookahead_scores)
        scores[node] = score

    next_node = min(scores, key=scores.get)
    return next_node
```
