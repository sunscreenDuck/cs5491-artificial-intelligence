```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes with improved constructive heuristics."""
    c1, c2, c3 = 0.4, 0.3, 0.3
    scores = {}
    
    for node in unvisited_nodes:
        remaining_nodes = unvisited_nodes - {node}
        average_distance_to_unvisited = np.mean([distance_matrix[node][i] for i in remaining_nodes])
        score = c1 * distance_matrix[current_node][node] - c2 * average_distance_to_unvisited - c3 * distance_matrix[destination_node][node]
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
