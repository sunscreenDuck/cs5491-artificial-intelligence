```python
import numpy as np

def heuristics_v2(distance_matrix):
    n = distance_matrix.shape[0]
    promisings = np.zeros((n, n))
    
    # Calculate the promising factor based on various factors
    promising_factor = 1 / distance_matrix + 1 / (distance_matrix + 1)
    
    # Sparsify the matrix by setting unpromising elements to zero
    threshold = np.percentile(promising_factor, 75) # Set the threshold as the 75th percentile
    promisings[promising_factor <= threshold] = 0
    
    return promisings
```

