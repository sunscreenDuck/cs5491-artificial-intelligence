```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the average distance
    avg_distance = np.mean(distance_matrix)
    
    # Initialize the indicators
    indicators = np.zeros_like(distance_matrix)
    
    # Update the indicators based on the distance matrix
    for i in range(distance_matrix.shape[0]):
        for j in range(distance_matrix.shape[1]):
            if distance_matrix[i, j] > avg_distance:
                # It's bad to include long edges in the solution
                indicators[i, j] = distance_matrix[i, j]
    
    return indicators
```
In `heuristics_v2`, we calculate the average distance of the given distance matrix and initialize the indicators as zeros. Then, we update the indicators based on the distance matrix. If the distance between two nodes is greater than the average distance, we consider it bad to include that edge in the solution and assign the corresponding value from the distance matrix to the indicators.
