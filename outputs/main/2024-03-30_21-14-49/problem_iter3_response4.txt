```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    threshold = 0.7
    weights = [0.4, 0.3, 0.2, 0.1]
    lookahead_scores = np.zeros(len(unvisited_nodes))
    for i, node in enumerate(unvisited_nodes):
        all_distances = distance_matrix[node, list(unvisited_nodes - {node})]
        average_distance_to_unvisited = np.mean(all_distances)
        std_dev_distance_to_unvisited = np.std(all_distances)
        lookahead_scores[i] = (
            weights[0] * distance_matrix[current_node][node] -
            weights[1] * average_distance_to_unvisited +
            weights[2] * std_dev_distance_to_unvisited -
            weights[3] * distance_matrix[destination_node][node]
        )
    next_node_idx = np.argmax(lookahead_scores)
    next_node = list(unvisited_nodes)[next_node_idx]
    return next_node
```
