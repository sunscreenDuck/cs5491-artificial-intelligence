```python
def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes."""
    weights = [0.4, 0.3, 0.2, 0.1]
    scores = {}
    for node in unvisited_nodes:
        distances = distance_matrix[node, list(unvisited_nodes)]
        average_distance = np.mean(distances)
        std_dev_distance = np.std(distances)
        score = sum(weight * value for weight, value in zip(weights, [distance_matrix[current_node][node], -average_distance, std_dev_distance, -distance_matrix[destination_node][node]]))
        scores[node] = score
    next_node = min(scores, key=scores.get)
    return next_node
```
