```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Calculate the inverse of the distance matrix
    inverse_distance_matrix = 1 / distance_matrix
    
    # Calculate the mean and standard deviation of the inverse distance matrix
    mean = np.mean(inverse_distance_matrix)
    std_dev = np.std(inverse_distance_matrix)
    
    # Calculate the threshold based on the mean and standard deviation
    threshold = mean - std_dev
    
    # Apply sparsification by setting unpromising elements to zero
    sparsified_matrix = inverse_distance_matrix.copy()
    sparsified_matrix[sparsified_matrix > threshold] = 0
    
    return sparsified_matrix
```

