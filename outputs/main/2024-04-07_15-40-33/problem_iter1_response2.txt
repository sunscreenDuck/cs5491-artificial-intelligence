```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the prior indicators of edge badness as the given distance matrix
    prior_indicators = np.copy(distance_matrix)
    
    # Find the maximum distance in the distance matrix
    max_distance = np.max(distance_matrix)
    
    # Calculate the badness multiplier
    multiplier = max_distance + 1
    
    # Update the prior indicators
    prior_indicators = np.where(distance_matrix == 0, 0, prior_indicators)
    
    # Normalize the distance matrix
    normalized_matrix = distance_matrix / max_distance
    
    # Update the prior indicators based on the normalized matrix
    prior_indicators = np.where(normalized_matrix == 1, prior_indicators + multiplier, prior_indicators)
    
    return prior_indicators
```

