```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    # Initialize the edge heuristics array
    edge_heuristics = np.zeros_like(distance_matrix)

    # Iterate over each node
    for i in range(distance_matrix.shape[0]):
        # Find the shortest edge for each node
        shortest_edge = np.min(distance_matrix[i, :])

        # Calculate the heuristics for each edge
        for j in range(distance_matrix.shape[1]):
            if distance_matrix[i, j] == shortest_edge:
                edge_heuristics[i, j] = shortest_edge
            else:
                edge_heuristics[i, j] = distance_matrix[i, j] - shortest_edge

    return edge_heuristics
```
