```python
import numpy as np

def select_next_node_v2(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """Select the next node to visit from the unvisited nodes with look-ahead mechanism."""
    threshold = 0.7
    c1, c2, c3, c4 = 0.4, 0.3, 0.2, 0.1
    scores = {}
    for node in unvisited_nodes:
        all_distances = [distance_matrix[node][i] for i in unvisited_nodes if i != node]
        average_distance_to_unvisited = np.mean(all_distances)
        std_dev_distance_to_unvisited = np.std(all_distances)
        
        look_aheads = []
        for next_node in unvisited_nodes:
            if next_node != node:
                next_all_distances = [distance_matrix[next_node][i] for i in unvisited_nodes if i != next_node]
                next_average_distance_to_unvisited = np.mean(next_all_distances)
                next_std_dev_distance_to_unvisited = np.std(next_all_distances)

                next_score = c1 * distance_matrix[current_node][next_node] - c2 * next_average_distance_to_unvisited + c3 * next_std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node][next_node]
                look_aheads.append(next_score)
        
        lookahead_score = np.mean(look_aheads)
        score = c1 * distance_matrix[current_node][node] - c2 * average_distance_to_unvisited + c3 * std_dev_distance_to_unvisited - c4 * distance_matrix[destination_node][node] + threshold * lookahead_score
        scores[node] = score
    
    next_node = min(scores, key=scores.get)
    return next_node
```
In the updated `select_next_node_v2` function, I have added a look-ahead mechanism that considers the scores of potential next nodes for each unvisited node. For each unvisited node, we calculate the average and standard deviation of the distances to other unvisited nodes. Then, for each potential next node (excluding the current node), we again calculate the average and standard deviation of distances considering the potential next node as the next visited node. Finally, we compute the look-ahead score as the average of the scores of all potential next nodes. The overall score is modified by adding the look-ahead score multiplied by a threshold value. The next node with the highest score is selected as the next node to visit.
