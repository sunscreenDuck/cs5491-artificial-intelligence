```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros((n, n))
    
    # Calculate the average and minimum distances for each node
    average_distances = np.mean(distance_matrix, axis=1)
    min_distances = np.min(distance_matrix, axis=1)
    
    # Calculate the inverse of average and minimum distances
    average_inverse = np.divide(1, average_distances, where=average_distances!=0)
    min_inverse = np.divide(1, min_distances, where=min_distances!=0)
    
    for i in range(n):
        for j in range(n):
            # Combine both factors
            heuristics_matrix[i, j] = average_inverse[i] * min_inverse[j]
    
    return heuristics_matrix
```
```

